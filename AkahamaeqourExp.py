#The obtained parameters (for \omega_{s}) from the fit, are used to find the root which is \sigma_{r} for the proposed exprission. 

from scipy import optimize
import numpy as np

b  = 2.45332       
c  = 0.00224011      
a0 = -0.0790066      
a1 = 0.00115792      
a2 = 1.70604e-05     
b0 = 0.000304746     
b1 = -2.47792e-05    
b2 = -1.09879e-07    
c0 = 8.17274e-06      
c1 = 4.68057e-08      
c2 = 4.53604e-11         
           
      
def p(x,y):
    return (2.*x+y)/3
    
      #w--> omega_s in range [1700,1900]
      #y--> sigma_z=[211.0689000000002, 218.51360000000022, #226.2441000000008, 234.26040000000012, 242.5625000000009, #251.15040000000135, 260.02410000000054, 269.1836000000003, #278.6289000000006, 288.3600000000006, 298.3769000000002, #308.6796000000004, 319.26810000000023, 330.1423999999997, #341.3025000000007, 352.7484000000004, 364.4801000000007, #376.4976000000006, 388.8009000000002, 401.3900000000003]
def f(x):
    w=1710   #using the results obtained from Akahameq.py
    y=211.0689000000002
    return (1364.423069+b*p(x,y)+c*p(x,y)*p(x,y)-(a0+a1*(p(x,y)-300)+a2*(p(x,y)-300)**2)*(y-x)-(b0+b1*(p(x,y)-300)+b2*(p(x,y)-300)**2)*(x-y)*(x-y)-(c0+c1*(p(x,y)-300)+c2*(p(x,y)-300)**2)*(y-x)*(y-x)*(y-x))-w


print(optimize.bisect(f,100,400))


